0.Use .gitignore
1.Make a new project folder
2.Change Directory to this new folder
3.Inside the project folder, create a new file called app.js, index.html, index.js
4.Set up a new NPM package, npm init
5.Using NPM install the express, ejs modules, mongoose etc
6.Require express in your server.js
7.Setup express
8.Create a root route get method with app.get()
9.Spin up our server on port 3000 with app.listen
10.Inclue jQuery link (google) and index.js in index.html
11.Run server with nodemon


Express setup with EJS, dotenv, Mongoose + encryption, crypto-js sha512 hash:
1.Server.js add this:
    require("dotenv").config();
    const express = require("express");
    const ejs = require("ejs");
    const app = express();
    const mongoose = require("mongoose");
    const encrypt = require("mongoose-encryption");
    const sha512 = require("crypto-js/sha512");
    


    app.set("view engine", "ejs");
    app.use(express.json());
    app.use(express.urlencoded({ extended: true }));
    app.use(express.static("public"));

    const SomeSchema = new mongoose.Schema({
        field1: String,
        field2: String,
    });
    SomeSchema.plugin(encrypt, { secret: process.env.NAME_OF_OPTION_DOTENV_FILE, encryptedFields: ["what we want to encrypt here"] });

    const SomeModel = mongoose.model("SomeName", SomeSchema);

    async function exampleFunction() {
        await mongoose.connect("mongodb://localhost:27017/blogDB");
//sha512() if we want to save it as a hash - 
//USE .toString() when searching in mongo when using this - like this: const username = sha512(req.body.username).toString();
        let someExample = new SomeModel({ field1: sha512(value1), field2: value2 });
        let result = await someExample
            .save()
            .then(() => {
                return "True";
            })
            .catch((err) => {
                console.log("Something went wrong: ", err.message);
                return err.message;
            });
        mongoose.connection.close();
        return result;
    }
    
    function main(){
        app.route("/)
        .get((req, res) => {
        res.render("index");
        })
        .post((req, res) => {
            //saveResult is the result returned in the function
            exampleFunction().then((saveResult) => {
                if (saveResult != "True") {
                res.send("Failed to register: ", saveResult);
                } else {
                res.redirect("/");
                }
            });
        });

        app.listen(3000);
    }

    if (require.main === module) {
    main();
    }



HTML:
    <!DOCTYPE html>
    <html>
        <head>
            <meta charset="utf-8">
            <meta http-equiv="X-UA-Compatible" content="IE=edge">
            <title></title>
            <meta name="description" content="">
            <meta name="viewport" content="width=device-width, initial-scale=1">
            <link rel="stylesheet" href="">
            <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.0/dist/css/bootstrap.min.css" />
            <link rel="stylesheet" href="/css/styles.css" />
            <script
            src="https://cdn.jsdelivr.net/npm/bootstrap@5.2.0/dist/js/bootstrap.bundle.min.js"
            integrity="sha384-A3rJD856KowSb7dwlZdYEkO39Gagi7vIsF0jrRAoQmDKKtQBHUuLZ9AsSv4jD4Xa"
            crossorigin="anonymous"
            defer
            ></script>
            <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.6.1/jquery.min.js" defer></script>
        </head>
        <body>
        </body>
    </html>

